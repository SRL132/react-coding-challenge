{"ast":null,"code":"var _jsxFileName = \"/home/sergi/aspaara/react-coding-challenge/client/src/components/job/JobDashboard.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport jobConfig from '../config/dashboards/jobConfig';\nimport { useQuery } from 'react-query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function JobDashboard() {\n  _s();\n\n  const {\n    data,\n    status\n  } = useQuery(\"fetchData\", jobConfig.fetch);\n  const fields = jobConfig.fields; //     Object.keys(fields).map(fieldString=>console.log(fields[fieldString]))\n  //  Object.keys(fields).map(fieldString => <th>{fields[fieldString].label}</th>)\n  // data.forEach((element)=>{\n  //  Object.keys(fields).map(fieldString=>console.log(element[fieldString]))}\n  //@ts-ignore\n\n  data.forEach(e => console.log(e));\n  if (status === 'loading') return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 36\n  }, this);\n  if (status === 'error') return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"There has been an error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 34\n  }, this);\n  console.log(jobConfig);\n  return /*#__PURE__*/_jsxDEV(\"table\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(JobDashboard, \"r91jLNwsqTqZNm64JWU7RjPAH/8=\", false, function () {\n  return [useQuery];\n});\n\n_c = JobDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobDashboard\");","map":{"version":3,"names":["React","jobConfig","useQuery","JobDashboard","data","status","fetch","fields","forEach","e","console","log"],"sources":["/home/sergi/aspaara/react-coding-challenge/client/src/components/job/JobDashboard.tsx"],"sourcesContent":["import React from 'react'\nimport Table from '../ui/Table'\nimport jobConfig from '../config/dashboards/jobConfig'\nimport { useQuery } from 'react-query'\n\nexport default function JobDashboard() {\n\n  const { data, status } = useQuery(\"fetchData\", jobConfig.fetch)\n\n  const fields = jobConfig.fields\n  //     Object.keys(fields).map(fieldString=>console.log(fields[fieldString]))\n\n\n  //  Object.keys(fields).map(fieldString => <th>{fields[fieldString].label}</th>)\n\n\n  // data.forEach((element)=>{\n  //  Object.keys(fields).map(fieldString=>console.log(element[fieldString]))}\n\n\n  //@ts-ignore\n  data.forEach((e) => console.log(e))\n\n\n  if (status === 'loading') return <h1>Loading...</h1>\n  if (status === 'error') return <h1>There has been an error</h1>\n  console.log(jobConfig)\n  return (\n    <table>\n\n    </table>\n\n  )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,SAASC,QAAT,QAAyB,aAAzB;;AAEA,eAAe,SAASC,YAAT,GAAwB;EAAA;;EAErC,MAAM;IAAEC,IAAF;IAAQC;EAAR,IAAmBH,QAAQ,CAAC,WAAD,EAAcD,SAAS,CAACK,KAAxB,CAAjC;EAEA,MAAMC,MAAM,GAAGN,SAAS,CAACM,MAAzB,CAJqC,CAKrC;EAGA;EAGA;EACA;EAGA;;EACAH,IAAI,CAACI,OAAL,CAAcC,CAAD,IAAOC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAApB;EAGA,IAAIJ,MAAM,KAAK,SAAf,EAA0B,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;EAC1B,IAAIA,MAAM,KAAK,OAAf,EAAwB,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;EACxBK,OAAO,CAACC,GAAR,CAAYV,SAAZ;EACA,oBACE;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;GA5BuBE,Y;UAEGD,Q;;;KAFHC,Y"},"metadata":{},"sourceType":"module"}