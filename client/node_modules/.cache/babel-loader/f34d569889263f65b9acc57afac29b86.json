{"ast":null,"code":"var _jsxFileName = \"/home/sergi/aspaara/react-coding-challenge/client/src/components/ui/Table.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { useInfiniteQuery } from 'react-query';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { UPDATE_SORTING } from '../reducers/jobReducerTypes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Table(_ref) {\n  _s();\n\n  var _useContext;\n\n  let {\n    entityConfig,\n    context\n  } = _ref;\n  //@ts-ignore\n  const [state, dispatch] = (_useContext = useContext(context)) !== null && _useContext !== void 0 ? _useContext : [];\n  const fields = entityConfig.fields;\n  const {\n    data,\n    status,\n    hasNextPage,\n    fetchNextPage,\n    isSuccess //@ts-ignore\n\n  } = useInfiniteQuery([entityConfig.infiniteQueryName, state], _ref2 => {\n    let {\n      pageParam = 1\n    } = _ref2;\n    return entityConfig.fetch(pageParam, state);\n  }, {\n    getNextPageParam: (_lastPage, allPages) => {\n      const nextPage = allPages.length + 1;\n      return nextPage;\n    }\n  });\n\n  const sortData = newSortOptions => {\n    if (state.sortOptions.sortBy !== newSortOptions.sortBy) {\n      dispatch({\n        type: UPDATE_SORTING,\n        payload: {\n          sortBy: newSortOptions.sortBy,\n          sortOrder: 'asc'\n        }\n      });\n    } else {\n      const newSortOrder = state.sortOptions.sortOrder === 'asc' || state.sortOptions.sortOrder === undefined ? 'desc' : 'asc';\n      dispatch({\n        type: UPDATE_SORTING,\n        payload: {\n          sortBy: newSortOptions.sortBy,\n          sortOrder: newSortOrder\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [status === 'loading' && /*#__PURE__*/_jsxDEV(\"h6\", {\n      children: 'Loading...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 38\n    }, this), status === 'error' && /*#__PURE__*/_jsxDEV(\"h6\", {\n      children: 'There has been an error'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 36\n    }, this), isSuccess && /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table align-middle table-bordered table-striped table-hover table-responsive\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"bg-warning align-middle \",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: Object.keys(fields).map(fieldString => /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"pointer\",\n            scope: \"col\",\n            onClick: () => sortData({\n              sortBy: fields[fieldString].name\n            }),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-center align-items-center \",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: fields[fieldString].label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-fw fa-sort\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 45\n              }, this)]\n            }, fields[fieldString].label, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 41\n            }, this)\n          }, fieldString, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: isSuccess && data.pages.map(page => {\n          return page.map(e => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: Object.keys(fields).map(fieldString => {\n                switch (fields[fieldString].type) {\n                  case 'keyValueArray':\n                    return /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: e[fieldString].map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"m-2\",\n                          children: field.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 74,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 73,\n                        columnNumber: 57\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 72,\n                      columnNumber: 60\n                    }, this);\n\n                  case 'boolean':\n                    //@ts-ignore\n                    return /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: e[fieldString] ? 'true' : 'false'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 81,\n                      columnNumber: 60\n                    }, this);\n\n                  default:\n                    //@ts-ignore\n                    return /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: e[fieldString] || undefined\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 83,\n                      columnNumber: 60\n                    }, this);\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 44\n            }, this);\n          });\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), isSuccess && (data === null || data === void 0 ? void 0 : data.pages[0].length) > 9 && /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      loadMore: fetchNextPage,\n      hasMore: hasNextPage,\n      loader: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: 'Loading...'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n    }, 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 56\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Table, \"pJEZOCZgfRweIZFFYoLQ1Yq0ckI=\", false, function () {\n  return [useInfiniteQuery];\n});\n\n_c = Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useContext","useInfiniteQuery","InfiniteScroll","UPDATE_SORTING","Table","entityConfig","context","state","dispatch","fields","data","status","hasNextPage","fetchNextPage","isSuccess","infiniteQueryName","pageParam","fetch","getNextPageParam","_lastPage","allPages","nextPage","length","sortData","newSortOptions","sortOptions","sortBy","type","payload","sortOrder","newSortOrder","undefined","Object","keys","map","fieldString","name","label","pages","page","e","field"],"sources":["/home/sergi/aspaara/react-coding-challenge/client/src/components/ui/Table.tsx"],"sourcesContent":["import React, { Context, useContext } from 'react'\nimport { useInfiniteQuery } from 'react-query'\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { job } from '../config/dashboards/jobConfig'\nimport { UPDATE_SORTING } from '../reducers/jobReducerTypes'\nimport { JobContextType } from '../context/jobContext'\nimport { EntityConfig, FieldConfig } from '../config/main/schema';\n\ntype TableProps = {\n    entityConfig: EntityConfig\n    context: Context<JobContextType>\n}\n\nexport default function Table({ entityConfig, context }: TableProps) {\n    //@ts-ignore\n    const [state, dispatch] = useContext(context) ?? []\n    const fields = entityConfig.fields\n    const { data, status, hasNextPage, fetchNextPage, isSuccess\n        //@ts-ignore\n    } = useInfiniteQuery([entityConfig.infiniteQueryName, state], ({ pageParam = 1 }) => entityConfig.fetch(pageParam, state), {\n        getNextPageParam: (_lastPage, allPages) => {\n            const nextPage = allPages.length + 1\n            return nextPage\n        }\n    })\n\n    const sortData = (newSortOptions: { sortBy: string; }) => {\n        if (state.sortOptions.sortBy !== newSortOptions.sortBy) {\n            dispatch({ type: UPDATE_SORTING, payload: { sortBy: newSortOptions.sortBy, sortOrder: 'asc' } })\n        } else {\n            const newSortOrder = state.sortOptions.sortOrder === 'asc' || state.sortOptions.sortOrder === undefined ? 'desc' : 'asc'\n            dispatch({ type: UPDATE_SORTING, payload: { sortBy: newSortOptions.sortBy, sortOrder: newSortOrder } })\n        }\n    }\n\n    return (\n        <div>\n            {status === 'loading' && <h6>{'Loading...'}</h6>}\n            {status === 'error' && <h6>{'There has been an error'}</h6>}\n\n            {isSuccess &&\n                <table className=\"table align-middle table-bordered table-striped table-hover table-responsive\">\n                    <thead className='bg-warning align-middle '>\n                        <tr>\n                            {Object.keys(fields)\n                                .map(fieldString =>\n                                    <th className='pointer' scope=\"col\" key={fieldString}\n                                        onClick={() => sortData({ sortBy: fields[fieldString].name })}>\n                                        <div key={fields[fieldString].label} className=\"d-flex justify-content-center align-items-center \"\n                                        >\n                                            <span>\n                                                {fields[fieldString].label}\n                                            </span>\n                                            <i\n                                                className=\"fa fa-fw fa-sort\"\n                                            >\n                                            </i>\n                                        </div>\n                                    </th>\n                                )}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            isSuccess && data.pages.map((page) => {\n                                return (page as Array<unknown>).map((e) => {\n                                    return <tr>\n                                        {Object.keys(fields).map(fieldString => {\n                                            switch (fields[fieldString].type) {\n                                                case ('keyValueArray'):\n\n                                                    return <td>{e[fieldString].map((field: FieldConfig) =>\n                                                        <div>\n                                                            <span className='m-2'>\n                                                                {field.name}\n                                                            </span>\n                                                        </div>)}\n                                                    </td>\n                                                case ('boolean'):\n                                                    //@ts-ignore\n                                                    return <td>{(e[fieldString] as boolean) ? 'true' : 'false'}</td>\n                                                default: //@ts-ignore\n                                                    return <td>{e[fieldString] || undefined}</td>\n                                            }\n                                        })}\n                                    </tr>\n                                })\n                            })\n                        }\n                    </tbody>\n                </table>\n            }\n            {/*@ts-ignore*/}\n            {isSuccess && data?.pages[0].length > 9 && <InfiniteScroll loadMore={fetchNextPage}\n                hasMore={hasNextPage}\n                loader={<h4>{'Loading...'}</h4>}\n                key={0}\n            >\n                <></>\n            </InfiniteScroll>}\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}