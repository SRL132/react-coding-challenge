{"ast":null,"code":"var _jsxFileName = \"/home/sergi/aspaara/react-coding-challenge/client/src/components/job/JobDashboard.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport jobConfig from '../config/dashboards/jobConfig';\nimport { useInfiniteQuery } from 'react-query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function JobDashboard() {\n  _s();\n\n  // Get an overview of the data with some statistics:\n  //booking grade\n  //office city\n  //skills\n  //industry\n  // Drill down into subsets by means of filtering and/or sorting\n  //@ts-ignore\n  const {\n    data,\n    status,\n    isPreviousData,\n    fetchNextPage,\n    isFetchingNextPage,\n    isLoading\n  } = useInfiniteQuery([\"fetchData\", 0], jobConfig.fetch);\n  const fields = jobConfig.fields;\n  if (status === 'loading') return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 36\n  }, this);\n  if (status === 'error') return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"There has been an error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 34\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [Object.keys(fields).map(fieldString => /*#__PURE__*/_jsxDEV(\"th\", {\n      children: fields[fieldString].label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 47\n    }, this)), data.map(e => {\n      var _e$startDate, _e$endDate, _e$requiredSkills, _e$optionalSkills;\n\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: e.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: e.originalId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: e.talentId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: e.talentName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: e.talentGrade\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: e.bookingGrade\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: e.operatingUnit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: e.officeCity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: e.officePostalCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: e.jobManagerName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: e.jobManagerId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: e.totalHours\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: (_e$startDate = e.startDate) === null || _e$startDate === void 0 ? void 0 : _e$startDate.toString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: (_e$endDate = e.endDate) === null || _e$endDate === void 0 ? void 0 : _e$endDate.toString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: e.clientName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: e.clientId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: e.industry\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: (_e$requiredSkills = e.requiredSkills) === null || _e$requiredSkills === void 0 ? void 0 : _e$requiredSkills.map(skill => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Name: \", skill.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Category: \", skill.category]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 45\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: (_e$optionalSkills = e.optionalSkills) === null || _e$optionalSkills === void 0 ? void 0 : _e$optionalSkills.map(skill => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Name: \", skill.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Category: \", skill.category]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 45\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: e.isUnassigned ? 'true' : 'false'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 33\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(JobDashboard, \"hGo8H1/5+jFUf0x/1/er0W/h8Qo=\", false, function () {\n  return [useInfiniteQuery];\n});\n\n_c = JobDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobDashboard\");","map":{"version":3,"names":["React","jobConfig","useInfiniteQuery","JobDashboard","data","status","isPreviousData","fetchNextPage","isFetchingNextPage","isLoading","fetch","fields","Object","keys","map","fieldString","label","e","id","originalId","talentId","talentName","talentGrade","bookingGrade","operatingUnit","officeCity","officePostalCode","jobManagerName","jobManagerId","totalHours","startDate","toString","endDate","clientName","clientId","industry","requiredSkills","skill","name","category","optionalSkills","isUnassigned"],"sources":["/home/sergi/aspaara/react-coding-challenge/client/src/components/job/JobDashboard.tsx"],"sourcesContent":["import React from 'react'\nimport jobConfig from '../config/dashboards/jobConfig'\nimport { useQuery, useInfiniteQuery } from 'react-query'\nimport { job } from '../config/dashboards/jobConfig'\n\nexport default function JobDashboard() {\n  // Get an overview of the data with some statistics:\n  //booking grade\n  //office city\n  //skills\n  //industry\n  // Drill down into subsets by means of filtering and/or sorting\n\n  //@ts-ignore\n  const { data, status, isPreviousData, fetchNextPage, isFetchingNextPage, isLoading\n  } = useInfiniteQuery([\"fetchData\", 0], jobConfig.fetch)\n\n\n  const fields = jobConfig.fields\n\n  if (status === 'loading') return <h1>Loading...</h1>\n  if (status === 'error') return <h1>There has been an error</h1>\n  return (\n    <table>\n      {Object.keys(fields).map(fieldString => <th>{fields[fieldString].label}</th>)}\n      {(data as job[]).map(e => <tr>\n        <td>{e.id}</td>\n        <td>{e.originalId}</td>\n        <td>{e.talentId}</td>\n        <td>{e.talentName}</td>\n        <td>{e.talentGrade}</td>\n        <td>{e.bookingGrade}</td>\n        <td>{e.operatingUnit}</td>\n        <td>{e.officeCity}</td>\n        <td>{e.officePostalCode}</td>\n        <td>{e.jobManagerName}</td>\n        <td>{e.jobManagerId}</td>\n        <td>{e.totalHours}</td>\n        <td>{e.startDate?.toString()}</td>\n        <td>{e.endDate?.toString()}</td>\n        <td>{e.clientName}</td>\n        <td>{e.clientId}</td>\n        <td>{e.industry}</td>\n        <td>{e.requiredSkills?.map(skill => <div>\n          <span>Name: {skill.name}</span>\n          <span>Category: {skill.category}</span>\n        </div>)}</td>\n        <td>{e.optionalSkills?.map(skill => <div>\n          <span>Name: {skill.name}</span>\n          <span>Category: {skill.category}</span>\n        </div>)}</td>\n        <td>{e.isUnassigned ? 'true' : 'false'}</td>\n      </tr>)}\n    </table>\n\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}