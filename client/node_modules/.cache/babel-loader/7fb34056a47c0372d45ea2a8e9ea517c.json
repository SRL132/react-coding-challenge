{"ast":null,"code":"var _jsxFileName = \"/home/sergi/aspaara/react-coding-challenge/client/src/components/job/JobDashboard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport jobConfig from '../config/dashboards/jobConfig';\nimport { useInfiniteQuery } from 'react-query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function JobDashboard() {\n  _s();\n\n  const [fetchOptions, setFetchOptions] = useState({\n    itemsPerPage: 10,\n    sortOptions: {\n      sortBy: 'isUnassigned',\n      sortOrder: 'desc'\n    }\n  }); // Get an overview of the data with some statistics:\n  //booking grade\n  //office city\n  //skills\n  //industry\n  // Drill down into subsets by means of filtering and/or sorting\n  //const sortField=useMutation((field))\n\n  const {\n    data,\n    status,\n    hasNextPage,\n    fetchNextPage,\n    isSuccess //@ts-ignore\n\n  } = useInfiniteQuery([\"InfiniteQueryData\", fetchOptions], _ref => {\n    let {\n      pageParam = 1\n    } = _ref;\n    return jobConfig.fetch(pageParam, fetchOptions);\n  }, {\n    getNextPageParam: (lastPage, allPages) => {\n      const nextPage = allPages.length + 1;\n      return nextPage;\n    }\n  });\n  console.log(data); //@ts-ignore\n\n  const sortData = newFetchOptions => {\n    if (fetchOptions !== newFetchOptions) {\n      //@ts-ignore\n      setFetchOptions(newFetchOptions);\n    } else {\n      newFetchOptions.sortOptions.sortOrder = newFetchOptions.sortOptions.sortOrder === 'asc' ? 'desc' : 'asc';\n      setFetchOptions(newFetchOptions);\n    }\n  }; //onClick={() => setFetchOptions({ ...fetchOptions, sortOptions: { sortBy: fields[fieldString].name, sortOrder: 'asc' } })}\n\n\n  const fields = jobConfig.fields;\n  if (status === 'loading') return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 36\n  }, this);\n  if (status === 'error') return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"There has been an error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 34\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Main insights:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), isSuccess && data.pages.length, /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Data size:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Booking grade:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Office city:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Skills:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Industry:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      loadMore: fetchNextPage,\n      hasMore: hasNextPage,\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-hover\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.keys(fields).map(fieldString => /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex\",\n                children: [fields[fieldString].label, /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa fa-fw fa-sort\",\n                  onClick: () => sortData({ ...fetchOptions,\n                    sortOptions: {\n                      sortBy: fields[fieldString].name,\n                      sortOrder: 'asc'\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: isSuccess && //@ts-ignore\n          data.pages.map(page => {\n            return page.map(e => {\n              var _e$startDate, _e$endDate, _e$requiredSkills, _e$optionalSkills;\n\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: e.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: e.originalId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: e.talentId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: e.talentName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: e.talentGrade\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: e.bookingGrade\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: e.operatingUnit\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: e.officeCity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: e.officePostalCode\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: e.jobManagerName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: e.jobManagerId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: e.totalHours\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: (_e$startDate = e.startDate) === null || _e$startDate === void 0 ? void 0 : _e$startDate.toString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: (_e$endDate = e.endDate) === null || _e$endDate === void 0 ? void 0 : _e$endDate.toString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: e.clientName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: e.clientId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: e.industry\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: (_e$requiredSkills = e.requiredSkills) === null || _e$requiredSkills === void 0 ? void 0 : _e$requiredSkills.map(skill => /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [\"Name: \", skill.name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 107,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [\"Category: \", skill.category]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 108,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 57\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: (_e$optionalSkills = e.optionalSkills) === null || _e$optionalSkills === void 0 ? void 0 : _e$optionalSkills.map(skill => /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [\"Name: \", skill.name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 111,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [\"Category: \", skill.category]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 112,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 57\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: e.isUnassigned ? 'true' : 'false'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 26\n              }, this);\n            });\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(JobDashboard, \"1+qJxcY1HXWHyhR6Pt09VyY/pPY=\", false, function () {\n  return [useInfiniteQuery];\n});\n\n_c = JobDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobDashboard\");","map":{"version":3,"names":["React","useState","InfiniteScroll","jobConfig","useInfiniteQuery","JobDashboard","fetchOptions","setFetchOptions","itemsPerPage","sortOptions","sortBy","sortOrder","data","status","hasNextPage","fetchNextPage","isSuccess","pageParam","fetch","getNextPageParam","lastPage","allPages","nextPage","length","console","log","sortData","newFetchOptions","fields","pages","Object","keys","map","fieldString","label","name","page","e","id","originalId","talentId","talentName","talentGrade","bookingGrade","operatingUnit","officeCity","officePostalCode","jobManagerName","jobManagerId","totalHours","startDate","toString","endDate","clientName","clientId","industry","requiredSkills","skill","category","optionalSkills","isUnassigned"],"sources":["/home/sergi/aspaara/react-coding-challenge/client/src/components/job/JobDashboard.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport InfiniteScroll from 'react-infinite-scroller';\nimport jobConfig from '../config/dashboards/jobConfig'\nimport { useQuery, useInfiniteQuery, useMutation } from 'react-query'\nimport { job } from '../config/dashboards/jobConfig'\nimport { FetchOptions } from 'react-query/types/core/query';\n\nexport default function JobDashboard() {\n  const [fetchOptions, setFetchOptions] = useState({\n    itemsPerPage: 10, sortOptions: {\n      sortBy: 'isUnassigned',\n      sortOrder: 'desc'\n    }\n  })\n\n  // Get an overview of the data with some statistics:\n  //booking grade\n  //office city\n  //skills\n  //industry\n  // Drill down into subsets by means of filtering and/or sorting\n\n  //const sortField=useMutation((field))\n\n\n  const { data, status, hasNextPage, fetchNextPage, isSuccess\n    //@ts-ignore\n  } = useInfiniteQuery([\"InfiniteQueryData\", fetchOptions], ({ pageParam = 1 }) => jobConfig.fetch(pageParam, fetchOptions), {\n\n    getNextPageParam: (lastPage, allPages) => {\n      const nextPage = allPages.length + 1\n      return nextPage\n    }\n  })\n  console.log(data)\n  //@ts-ignore\n  const sortData = (newFetchOptions) => {\n    if (fetchOptions !== newFetchOptions) {\n      //@ts-ignore\n      setFetchOptions(newFetchOptions)\n    } else {\n      newFetchOptions.sortOptions.sortOrder = newFetchOptions.sortOptions.sortOrder === 'asc' ? 'desc' : 'asc'\n      setFetchOptions(newFetchOptions)\n    }\n\n  }\n\n  //onClick={() => setFetchOptions({ ...fetchOptions, sortOptions: { sortBy: fields[fieldString].name, sortOrder: 'asc' } })}\n  const fields = jobConfig.fields\n\n  if (status === 'loading') return <h1>Loading...</h1>\n  if (status === 'error') return <h1>There has been an error</h1>\n  return (\n    <>\n      <div>\n        <h5>Main insights:</h5>\n        {isSuccess && data.pages.length}\n        <ul>\n          <li><span>Data size:</span></li>\n          <li><span>Booking grade:</span></li>\n          <li><span>Office city:</span></li>\n          <li><span>Skills:</span></li>\n          <li><span>Industry:</span></li>\n        </ul>\n      </div>\n      {/*@ts-ignore*/}\n      < InfiniteScroll loadMore={fetchNextPage} hasMore={hasNextPage} >\n        <table className=\"table table-hover\">\n          <thead>\n            <tr>\n              {Object.keys(fields)\n                .map(fieldString =>\n                  <th scope=\"col\">\n                    <div className='d-flex'>{fields[fieldString].label}\n                      <i className=\"fa fa-fw fa-sort\"\n                        onClick={() => sortData({ ...fetchOptions, sortOptions: { sortBy: fields[fieldString].name, sortOrder: 'asc' } })}\n                      >\n                      </i>\n                    </div>\n                  </th>)}\n            </tr>\n          </thead>\n          <tbody>\n            {isSuccess &&\n              //@ts-ignore\n              data.pages.map((page) => {\n                return (page as job[]).map((e) => {\n                  return <tr>\n                    <td >{e.id}</td>\n                    <td>{e.originalId}</td>\n                    <td>{e.talentId}</td>\n                    <td>{e.talentName}</td>\n                    <td>{e.talentGrade}</td>\n                    <td>{e.bookingGrade}</td>\n                    <td>{e.operatingUnit}</td>\n                    <td>{e.officeCity}</td>\n                    <td>{e.officePostalCode}</td>\n                    <td>{e.jobManagerName}</td>\n                    <td>{e.jobManagerId}</td>\n                    <td>{e.totalHours}</td>\n                    <td>{e.startDate?.toString()}</td>\n                    <td>{e.endDate?.toString()}</td>\n                    <td>{e.clientName}</td>\n                    <td>{e.clientId}</td>\n                    <td>{e.industry}</td>\n                    <td>{e.requiredSkills?.map(skill => <div>\n                      <span>Name: {skill.name}</span>\n                      <span>Category: {skill.category}</span>\n                    </div>)}</td>\n                    <td>{e.optionalSkills?.map(skill => <div>\n                      <span>Name: {skill.name}</span>\n                      <span>Category: {skill.category}</span>\n                    </div>)}</td>\n                    <td>{e.isUnassigned ? 'true' : 'false'}</td>\n                  </tr>\n                });\n              }\n              )}</tbody>\n        </table>\n      </InfiniteScroll >\n    </>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}