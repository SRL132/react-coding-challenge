{"ast":null,"code":"var _jsxFileName = \"/home/sergi/aspaara/react-coding-challenge/client/src/components/job/JobDashboard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { useInfiniteQuery } from 'react-query';\nimport { JobContext } from '../context/jobContext';\nimport jobConfig from '../config/dashboards/jobConfig';\nimport Stats from '../ui/Stats';\nimport Table from '../ui/Table';\nimport FilterGroup from '../ui/FilterGroup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst JobDashboard = () => {\n  _s();\n\n  const state = useContext(JobContext);\n  const {\n    status,\n    hasNextPage,\n    fetchNextPage,\n    isSuccess //@ts-ignore\n\n  } = useInfiniteQuery([\"InfiniteQueryData\", state], _ref => {\n    let {\n      pageParam = 1\n    } = _ref;\n    return jobConfig.fetch(pageParam, state);\n  }, {\n    getNextPageParam: (lastPage, allPages) => {\n      const nextPage = allPages.length + 1;\n      return nextPage;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Stats, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilterGroup, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(JobDashboard, \"hAn4ZtD5lU+yIn870+QnGAml/qY=\", false, function () {\n  return [useInfiniteQuery];\n});\n\n_c = JobDashboard;\nexport default JobDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobDashboard\");","map":{"version":3,"names":["React","useContext","useInfiniteQuery","JobContext","jobConfig","Stats","Table","FilterGroup","JobDashboard","state","status","hasNextPage","fetchNextPage","isSuccess","pageParam","fetch","getNextPageParam","lastPage","allPages","nextPage","length"],"sources":["/home/sergi/aspaara/react-coding-challenge/client/src/components/job/JobDashboard.tsx"],"sourcesContent":["import React, { useContext } from 'react'\nimport { useInfiniteQuery } from 'react-query'\nimport { JobContext } from '../context/jobContext';\nimport jobConfig from '../config/dashboards/jobConfig'\nimport Stats from '../ui/Stats';\nimport Table from '../ui/Table';\nimport FilterGroup from '../ui/FilterGroup';\n\nconst JobDashboard = () => {\n  const state = useContext(JobContext)\n\n  const { status, hasNextPage, fetchNextPage, isSuccess\n    //@ts-ignore\n  } = useInfiniteQuery([\"InfiniteQueryData\", state], ({ pageParam = 1 }) => jobConfig.fetch(pageParam, state), {\n    getNextPageParam: (lastPage, allPages) => {\n      const nextPage = allPages.length + 1\n      return nextPage\n    }\n  })\n\n  return (\n    <div>\n      <Stats />\n      <FilterGroup />\n      <Table />\n    </div>\n  )\n}\n\nexport default JobDashboard"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,gBAAT,QAAiC,aAAjC;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;;;AAEA,MAAMC,YAAY,GAAG,MAAM;EAAA;;EACzB,MAAMC,KAAK,GAAGR,UAAU,CAACE,UAAD,CAAxB;EAEA,MAAM;IAAEO,MAAF;IAAUC,WAAV;IAAuBC,aAAvB;IAAsCC,SAAtC,CACJ;;EADI,IAEFX,gBAAgB,CAAC,CAAC,mBAAD,EAAsBO,KAAtB,CAAD,EAA+B;IAAA,IAAC;MAAEK,SAAS,GAAG;IAAd,CAAD;IAAA,OAAuBV,SAAS,CAACW,KAAV,CAAgBD,SAAhB,EAA2BL,KAA3B,CAAvB;EAAA,CAA/B,EAAyF;IAC3GO,gBAAgB,EAAE,CAACC,QAAD,EAAWC,QAAX,KAAwB;MACxC,MAAMC,QAAQ,GAAGD,QAAQ,CAACE,MAAT,GAAkB,CAAnC;MACA,OAAOD,QAAP;IACD;EAJ0G,CAAzF,CAFpB;EASA,oBACE;IAAA,wBACE,QAAC,KAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,WAAD;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,KAAD;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CAnBD;;GAAMX,Y;UAKAN,gB;;;KALAM,Y;AAqBN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}