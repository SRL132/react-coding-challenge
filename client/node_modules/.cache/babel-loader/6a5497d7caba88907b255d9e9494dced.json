{"ast":null,"code":"var _jsxFileName = \"/home/sergi/aspaara/react-coding-challenge/client/src/components/job/JobDashboard.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport jobConfig from '../config/dashboards/jobConfig';\nimport { useInfiniteQuery } from 'react-query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function JobDashboard() {\n  _s();\n\n  const LIMIT = 10; // Get an overview of the data with some statistics:\n  //booking grade\n  //office city\n  //skills\n  //industry\n  // Drill down into subsets by means of filtering and/or sorting\n  //@ts-ignore\n\n  const {\n    data,\n    status,\n    page,\n    hasNextPage,\n    fetchNextPage,\n    isFetchingNextPage,\n    isSuccess,\n    isLoading //@ts-ignore\n\n  } = useInfiniteQuery(\"fetchData\", _ref => {\n    let {\n      pageParam = 1\n    } = _ref;\n    return jobConfig.fetch(pageParam, LIMIT);\n  }, {\n    //@ts-ignore\n    getNextPageParam: (lastPage, allPages) => {\n      const nextPage = allPages.length + 1;\n      return nextPage;\n    }\n  });\n  console.log(data);\n  const fields = jobConfig.fields;\n  if (status === 'loading') return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 36\n  }, this);\n  if (status === 'error') return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"There has been an error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 34\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-hover\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: Object.keys(fields).map(fieldString => /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: fields[fieldString].label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 53\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: isSuccess && //@ts-ignore\n        data.pages[0].map(e => {\n          var _e$startDate, _e$endDate, _e$requiredSkills, _e$optionalSkills;\n\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: e.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: e.originalId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: e.talentId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: e.talentName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: e.talentGrade\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: e.bookingGrade\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: e.operatingUnit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: e.officeCity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: e.officePostalCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: e.jobManagerName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: e.jobManagerId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: e.totalHours\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: (_e$startDate = e.startDate) === null || _e$startDate === void 0 ? void 0 : _e$startDate.toString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: (_e$endDate = e.endDate) === null || _e$endDate === void 0 ? void 0 : _e$endDate.toString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: e.clientName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: e.clientId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: e.industry\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: (_e$requiredSkills = e.requiredSkills) === null || _e$requiredSkills === void 0 ? void 0 : _e$requiredSkills.map(skill => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Name: \", skill.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Category: \", skill.category]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 53\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: (_e$optionalSkills = e.optionalSkills) === null || _e$optionalSkills === void 0 ? void 0 : _e$optionalSkills.map(skill => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Name: \", skill.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Category: \", skill.category]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 53\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: e.isUnassigned ? 'true' : 'false'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      loadMore: fetchNextPage,\n      hasMore: hasNextPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(JobDashboard, \"rWRlOevLhd3UZQUE2BIC6QfqAlw=\", false, function () {\n  return [useInfiniteQuery];\n});\n\n_c = JobDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobDashboard\");","map":{"version":3,"names":["React","InfiniteScroll","jobConfig","useInfiniteQuery","JobDashboard","LIMIT","data","status","page","hasNextPage","fetchNextPage","isFetchingNextPage","isSuccess","isLoading","pageParam","fetch","getNextPageParam","lastPage","allPages","nextPage","length","console","log","fields","Object","keys","map","fieldString","label","pages","e","id","originalId","talentId","talentName","talentGrade","bookingGrade","operatingUnit","officeCity","officePostalCode","jobManagerName","jobManagerId","totalHours","startDate","toString","endDate","clientName","clientId","industry","requiredSkills","skill","name","category","optionalSkills","isUnassigned"],"sources":["/home/sergi/aspaara/react-coding-challenge/client/src/components/job/JobDashboard.tsx"],"sourcesContent":["import React from 'react'\nimport InfiniteScroll from 'react-infinite-scroller';\nimport jobConfig from '../config/dashboards/jobConfig'\nimport { useQuery, useInfiniteQuery } from 'react-query'\nimport { job } from '../config/dashboards/jobConfig'\n\nexport default function JobDashboard() {\n\n  const LIMIT = 10;\n  // Get an overview of the data with some statistics:\n  //booking grade\n  //office city\n  //skills\n  //industry\n  // Drill down into subsets by means of filtering and/or sorting\n\n  //@ts-ignore\n  const { data, status, page, hasNextPage, fetchNextPage, isFetchingNextPage, isSuccess, isLoading\n    //@ts-ignore\n  } = useInfiniteQuery(\"fetchData\", ({ pageParam = 1 }) => jobConfig.fetch(pageParam, LIMIT), {\n    //@ts-ignore\n    getNextPageParam: (lastPage, allPages) => {\n      const nextPage = allPages.length + 1\n      return nextPage\n    }\n  })\n  console.log(data)\n\n  const fields = jobConfig.fields\n\n  if (status === 'loading') return <h1>Loading...</h1>\n  if (status === 'error') return <h1>There has been an error</h1>\n  return (\n    <>\n      <table className=\"table table-hover\">\n        <thead>\n          <tr>\n            {Object.keys(fields).map(fieldString => <th scope=\"col\">{fields[fieldString].label}</th>)}\n          </tr>\n        </thead>\n        <tbody>\n          {isSuccess &&\n            //@ts-ignore\n            (data.pages[0] as job[]).map(e =>\n              <tr>\n                <td>{e.id}</td>\n                <td>{e.originalId}</td>\n                <td>{e.talentId}</td>\n                <td>{e.talentName}</td>\n                <td>{e.talentGrade}</td>\n                <td>{e.bookingGrade}</td>\n                <td>{e.operatingUnit}</td>\n                <td>{e.officeCity}</td>\n                <td>{e.officePostalCode}</td>\n                <td>{e.jobManagerName}</td>\n                <td>{e.jobManagerId}</td>\n                <td>{e.totalHours}</td>\n                <td>{e.startDate?.toString()}</td>\n                <td>{e.endDate?.toString()}</td>\n                <td>{e.clientName}</td>\n                <td>{e.clientId}</td>\n                <td>{e.industry}</td>\n                <td>{e.requiredSkills?.map(skill => <div>\n                  <span>Name: {skill.name}</span>\n                  <span>Category: {skill.category}</span>\n                </div>)}</td>\n                <td>{e.optionalSkills?.map(skill => <div>\n                  <span>Name: {skill.name}</span>\n                  <span>Category: {skill.category}</span>\n                </div>)}</td>\n                <td>{e.isUnassigned ? 'true' : 'false'}</td>\n              </tr>)}\n        </tbody>\n      </table>\n      <InfiniteScroll loadMore={fetchNextPage} hasMore={hasNextPage} ></InfiniteScroll>\n    </>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}