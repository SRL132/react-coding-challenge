{"ast":null,"code":"var _jsxFileName = \"/home/sergi/aspaara/react-coding-challenge/client/src/components/ui/Table.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport jobConfig from '../config/dashboards/jobConfig';\nimport { UPDATE_SORTING } from '../reducers/jobReducerTypes';\nimport { JobContext } from '../context/jobContext';\nimport { useInfiniteQuery } from 'react-query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Table() {\n  _s();\n\n  //@ts-ignore\n  const [state, dispatch] = useContext(JobContext);\n  const fields = jobConfig.fields;\n  const {\n    data,\n    status,\n    hasNextPage,\n    fetchNextPage,\n    isSuccess //@ts-ignore\n\n  } = useInfiniteQuery([\"InfiniteQueryData\", state], _ref => {\n    let {\n      pageParam = 1\n    } = _ref;\n    return jobConfig.fetch(pageParam, state);\n  }, {\n    getNextPageParam: (lastPage, allPages) => {\n      const nextPage = allPages.length + 1;\n      return nextPage;\n    }\n  }); //@ts-ignore\n\n  const sortData = newSortOptions => {\n    if (state.sortOptions.sortBy !== newSortOptions.sortBy) {\n      dispatch({\n        type: UPDATE_SORTING,\n        payload: {\n          sortBy: newSortOptions.sortBy,\n          sortOrder: 'asc'\n        }\n      });\n    } else {\n      const newSortOrder = state.sortOptions.sortOrder === 'asc' || state.sortOptions.sortOrder === undefined ? 'desc' : 'asc';\n      dispatch({\n        type: UPDATE_SORTING,\n        payload: {\n          sortBy: newSortOptions.sortBy,\n          sortOrder: newSortOrder\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"table table-hover min-vh-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: Object.keys(fields).map(fieldString => /*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex\",\n            children: [fields[fieldString].label, /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-fw fa-sort\",\n              onClick: () => sortData({\n                sortBy: fields[fieldString].name\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: isSuccess && data.pages.map(page => {\n        return page.map(e => {\n          var _e$startDate, _e$endDate, _e$requiredSkills, _e$optionalSkills;\n\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: e.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: e.originalId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: e.talentId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: e.talentName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: e.talentGrade\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: e.bookingGrade\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: e.operatingUnit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: e.officeCity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: e.officePostalCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: e.jobManagerName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: e.jobManagerId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: e.totalHours\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: (_e$startDate = e.startDate) === null || _e$startDate === void 0 ? void 0 : _e$startDate.toString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: (_e$endDate = e.endDate) === null || _e$endDate === void 0 ? void 0 : _e$endDate.toString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: e.clientName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: e.clientId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: e.industry\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: (_e$requiredSkills = e.requiredSkills) === null || _e$requiredSkills === void 0 ? void 0 : _e$requiredSkills.map(skill => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Name: \", skill.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Category: \", skill.category]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 69\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: (_e$optionalSkills = e.optionalSkills) === null || _e$optionalSkills === void 0 ? void 0 : _e$optionalSkills.map(skill => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Name: \", skill.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Category: \", skill.category]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 69\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: e.isUnassigned ? 'true' : 'false'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 36\n          }, this);\n        });\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Table, \"ArtxdHTg9J2j8S3MspHUn+zu1pw=\", false, function () {\n  return [useInfiniteQuery];\n});\n\n_c = Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useContext","jobConfig","UPDATE_SORTING","JobContext","useInfiniteQuery","Table","state","dispatch","fields","data","status","hasNextPage","fetchNextPage","isSuccess","pageParam","fetch","getNextPageParam","lastPage","allPages","nextPage","length","sortData","newSortOptions","sortOptions","sortBy","type","payload","sortOrder","newSortOrder","undefined","Object","keys","map","fieldString","label","name","pages","page","e","id","originalId","talentId","talentName","talentGrade","bookingGrade","operatingUnit","officeCity","officePostalCode","jobManagerName","jobManagerId","totalHours","startDate","toString","endDate","clientName","clientId","industry","requiredSkills","skill","category","optionalSkills","isUnassigned"],"sources":["/home/sergi/aspaara/react-coding-challenge/client/src/components/ui/Table.tsx"],"sourcesContent":["import React, { useState, useContext } from 'react'\nimport jobConfig, { job } from '../config/dashboards/jobConfig'\nimport { UPDATE_SORTING } from '../reducers/jobReducerTypes'\nimport { JobContext } from '../context/jobContext'\nimport { useInfiniteQuery } from 'react-query'\n\nexport default function Table() {\n    //@ts-ignore\n    const [state, dispatch] = useContext(JobContext)\n    const fields = jobConfig.fields\n    const { data, status, hasNextPage, fetchNextPage, isSuccess\n        //@ts-ignore\n    } = useInfiniteQuery([\"InfiniteQueryData\", state], ({ pageParam = 1 }) => jobConfig.fetch(pageParam, state), {\n        getNextPageParam: (lastPage, allPages) => {\n            const nextPage = allPages.length + 1\n            return nextPage\n        }\n    })\n    //@ts-ignore\n    const sortData = (newSortOptions) => {\n        if (state.sortOptions.sortBy !== newSortOptions.sortBy) {\n            dispatch({ type: UPDATE_SORTING, payload: { sortBy: newSortOptions.sortBy, sortOrder: 'asc' } })\n        } else {\n            const newSortOrder = state.sortOptions.sortOrder === 'asc' || state.sortOptions.sortOrder === undefined ? 'desc' : 'asc'\n            dispatch({ type: UPDATE_SORTING, payload: { sortBy: newSortOptions.sortBy, sortOrder: newSortOrder } })\n        }\n    }\n\n    return (\n        <table className=\"table table-hover min-vh-100\">\n            <thead>\n                <tr>\n                    {Object.keys(fields)\n                        .map(fieldString =>\n                            <th scope=\"col\">\n                                <div className='d-flex'>{fields[fieldString].label}\n                                    <i className=\"fa fa-fw fa-sort\"\n                                        onClick={() => sortData({ sortBy: fields[fieldString].name })}\n                                    >\n                                    </i>\n                                </div>\n                            </th>)}\n                </tr>\n            </thead>\n            <tbody>\n                {isSuccess &&\n                    data.pages.map((page) => {\n                        return (page as job[]).map((e) => {\n                            return <tr>\n                                <td >{e.id}</td>\n                                <td>{e.originalId}</td>\n                                <td>{e.talentId}</td>\n                                <td>{e.talentName}</td>\n                                <td>{e.talentGrade}</td>\n                                <td>{e.bookingGrade}</td>\n                                <td>{e.operatingUnit}</td>\n                                <td>{e.officeCity}</td>\n                                <td>{e.officePostalCode}</td>\n                                <td>{e.jobManagerName}</td>\n                                <td>{e.jobManagerId}</td>\n                                <td>{e.totalHours}</td>\n                                <td>{e.startDate?.toString()}</td>\n                                <td>{e.endDate?.toString()}</td>\n                                <td>{e.clientName}</td>\n                                <td>{e.clientId}</td>\n                                <td>{e.industry}</td>\n                                <td>{e.requiredSkills?.map(skill => <div>\n                                    <span>Name: {skill.name}</span>\n                                    <span>Category: {skill.category}</span>\n                                </div>)}</td>\n                                <td>{e.optionalSkills?.map(skill => <div>\n                                    <span>Name: {skill.name}</span>\n                                    <span>Category: {skill.category}</span>\n                                </div>)}</td>\n                                <td>{e.isUnassigned ? 'true' : 'false'}</td>\n                            </tr>\n                        });\n                    }\n                    )}\n            </tbody>\n        </table>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}