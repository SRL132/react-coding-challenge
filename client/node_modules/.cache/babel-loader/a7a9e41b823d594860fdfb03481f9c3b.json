{"ast":null,"code":"var _jsxFileName = \"/home/sergi/aspaara/react-coding-challenge/client/src/components/job/JobDashboard.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport jobConfig from '../config/dashboards/jobConfig';\nimport { useInfiniteQuery } from 'react-query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function JobDashboard() {\n  _s();\n\n  const LIMIT = 10; // Get an overview of the data with some statistics:\n  //booking grade\n  //office city\n  //skills\n  //industry\n  // Drill down into subsets by means of filtering and/or sorting\n  //data.pages[0] as job[]).map(e =>\n  //@ts-ignore\n\n  const {\n    data,\n    status,\n    page,\n    hasNextPage,\n    fetchNextPage,\n    isFetchingNextPage,\n    isSuccess,\n    isLoading //@ts-ignore\n\n  } = useInfiniteQuery(\"fetchData\", _ref => {\n    let {\n      pageParam = 1\n    } = _ref;\n    return jobConfig.fetch(pageParam, LIMIT);\n  }, {\n    //@ts-ignore\n    getNextPageParam: (lastPage, allPages) => {\n      const nextPage = allPages.length + 1;\n      return nextPage;\n    }\n  });\n  console.log(data);\n  const fields = jobConfig.fields;\n  if (status === 'loading') return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 36\n  }, this);\n  if (status === 'error') return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"There has been an error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 34\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"table table-hover\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: Object.keys(fields).map(fieldString => /*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"col\",\n          children: fields[fieldString].label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 51\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n        loadMore: fetchNextPage,\n        hasMore: hasNextPage,\n        children: isSuccess && //@ts-ignore\n        data.pages.map(page => {\n          page.results.map(e => {\n            var _e$startDate, _e$endDate, _e$requiredSkills, _e$optionalSkills;\n\n            /*#__PURE__*/\n            _jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: e.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: e.originalId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: e.talentId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: e.talentName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: e.talentGrade\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: e.bookingGrade\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: e.operatingUnit\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: e.officeCity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: e.officePostalCode\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: e.jobManagerName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: e.jobManagerId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: e.totalHours\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: (_e$startDate = e.startDate) === null || _e$startDate === void 0 ? void 0 : _e$startDate.toString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: (_e$endDate = e.endDate) === null || _e$endDate === void 0 ? void 0 : _e$endDate.toString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: e.clientName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: e.clientId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: e.industry\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: (_e$requiredSkills = e.requiredSkills) === null || _e$requiredSkills === void 0 ? void 0 : _e$requiredSkills.map(skill => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Name: \", skill.name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Category: \", skill.category]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 55\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: (_e$optionalSkills = e.optionalSkills) === null || _e$optionalSkills === void 0 ? void 0 : _e$optionalSkills.map(skill => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Name: \", skill.name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Category: \", skill.category]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 55\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: e.isUnassigned ? 'true' : 'false'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this);\n          });\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(JobDashboard, \"rWRlOevLhd3UZQUE2BIC6QfqAlw=\", false, function () {\n  return [useInfiniteQuery];\n});\n\n_c = JobDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobDashboard\");","map":{"version":3,"names":["React","InfiniteScroll","jobConfig","useInfiniteQuery","JobDashboard","LIMIT","data","status","page","hasNextPage","fetchNextPage","isFetchingNextPage","isSuccess","isLoading","pageParam","fetch","getNextPageParam","lastPage","allPages","nextPage","length","console","log","fields","Object","keys","map","fieldString","label","pages","results","e","id","originalId","talentId","talentName","talentGrade","bookingGrade","operatingUnit","officeCity","officePostalCode","jobManagerName","jobManagerId","totalHours","startDate","toString","endDate","clientName","clientId","industry","requiredSkills","skill","name","category","optionalSkills","isUnassigned"],"sources":["/home/sergi/aspaara/react-coding-challenge/client/src/components/job/JobDashboard.tsx"],"sourcesContent":["import React from 'react'\nimport InfiniteScroll from 'react-infinite-scroller';\nimport jobConfig from '../config/dashboards/jobConfig'\nimport { useQuery, useInfiniteQuery } from 'react-query'\nimport { job } from '../config/dashboards/jobConfig'\n\nexport default function JobDashboard() {\n\n  const LIMIT = 10;\n  // Get an overview of the data with some statistics:\n  //booking grade\n  //office city\n  //skills\n  //industry\n  // Drill down into subsets by means of filtering and/or sorting\n\n\n  //data.pages[0] as job[]).map(e =>\n\n\n  //@ts-ignore\n  const { data, status, page, hasNextPage, fetchNextPage, isFetchingNextPage, isSuccess, isLoading\n    //@ts-ignore\n  } = useInfiniteQuery(\"fetchData\", ({ pageParam = 1 }) => jobConfig.fetch(pageParam, LIMIT), {\n    //@ts-ignore\n    getNextPageParam: (lastPage, allPages) => {\n      const nextPage = allPages.length + 1\n      return nextPage\n    }\n  })\n  console.log(data)\n\n  const fields = jobConfig.fields\n\n  if (status === 'loading') return <h1>Loading...</h1>\n  if (status === 'error') return <h1>There has been an error</h1>\n  return (\n    <table className=\"table table-hover\">\n      <thead>\n        <tr>\n          {Object.keys(fields).map(fieldString => <th scope=\"col\">{fields[fieldString].label}</th>)}\n        </tr>\n      </thead>\n      <tbody>\n        { /* @ts-ignore */}\n        <InfiniteScroll loadMore={fetchNextPage} hasMore={hasNextPage} >\n          {isSuccess &&\n            //@ts-ignore\n            data.pages.map((page) => {\n              (page.results as job[]).map((e) => {\n                <tr>\n                  <td>{e.id}</td>\n                  <td>{e.originalId}</td>\n                  <td>{e.talentId}</td>\n                  <td>{e.talentName}</td>\n                  <td>{e.talentGrade}</td>\n                  <td>{e.bookingGrade}</td>\n                  <td>{e.operatingUnit}</td>\n                  <td>{e.officeCity}</td>\n                  <td>{e.officePostalCode}</td>\n                  <td>{e.jobManagerName}</td>\n                  <td>{e.jobManagerId}</td>\n                  <td>{e.totalHours}</td>\n                  <td>{e.startDate?.toString()}</td>\n                  <td>{e.endDate?.toString()}</td>\n                  <td>{e.clientName}</td>\n                  <td>{e.clientId}</td>\n                  <td>{e.industry}</td>\n                  <td>{e.requiredSkills?.map(skill => <div>\n                    <span>Name: {skill.name}</span>\n                    <span>Category: {skill.category}</span>\n                  </div>)}</td>\n                  <td>{e.optionalSkills?.map(skill => <div>\n                    <span>Name: {skill.name}</span>\n                    <span>Category: {skill.category}</span>\n                  </div>)}</td>\n                  <td>{e.isUnassigned ? 'true' : 'false'}</td>\n                </tr>\n              });\n            }\n            )}\n        </InfiniteScroll>\n      </tbody>\n    </table>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}