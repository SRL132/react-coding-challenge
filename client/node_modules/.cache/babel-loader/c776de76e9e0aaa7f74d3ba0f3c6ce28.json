{"ast":null,"code":"var _jsxFileName = \"/home/sergi/aspaara/react-coding-challenge/client/src/components/ui/Stats.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery } from 'react-query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Stats(_ref) {\n  _s();\n\n  let {\n    entityConfig\n  } = _ref;\n  const {\n    fields\n  } = entityConfig;\n\n  const getMostFrequent = arr => {\n    const filteredArray = arr.filter(e => e !== undefined);\n\n    if (filteredArray.length > 0) {\n      const hashmap = filteredArray.reduce((acc, val) => {\n        //@ts-ignore\n        acc[val] = (acc[val] || 0) + 1;\n        return acc;\n      }, {}); //@ts-ignore\n\n      return Object.keys(hashmap).reduce((a, b) => hashmap[a] > hashmap[b] ? a : b);\n    }\n  };\n\n  const getMostBy = (most, by) => {};\n\n  const getTop = () => {};\n\n  const getPercentage = () => {};\n\n  const getMostRequiredSkillsByRole = role => {\n    let skillsArray = [];\n    data.filter(e => {\n      return e.bookingGrade === role;\n    }).map(filteredEl => {\n      var _filteredEl$requiredS;\n\n      filteredEl === null || filteredEl === void 0 ? void 0 : (_filteredEl$requiredS = filteredEl.requiredSkills) === null || _filteredEl$requiredS === void 0 ? void 0 : _filteredEl$requiredS.forEach(element => {\n        return skillsArray.push(element.name);\n      });\n    });\n    return getMostFrequent(skillsArray);\n  };\n\n  const getTopClient = () => {\n    let clientArray = [];\n    data.map(e => {\n      return clientArray.push(e.clientId);\n    });\n    return getMostFrequent(clientArray);\n  };\n\n  const getOfficeWithMostJobsByTopClient = () => {\n    const client = getTopClient();\n    let officeCityArray = [];\n    data.filter(e => {\n      return e.clientId === client;\n    }).map(filteredE => {\n      return filteredEl.officeCity && officeCityArray.push(filteredEl.officeCity);\n    });\n    return getMostFrequent(officeCityArray);\n  };\n\n  const getPercentageOfJobsByIndustry = industry => {\n    const filteredData = data.filter(e => {\n      return e.industry === industry;\n    });\n    return filteredData.length / data.length * 100;\n  };\n\n  const {\n    data,\n    status,\n    isSuccess\n  } = useQuery(entityConfig.normalQueryName, entityConfig.fetchAll);\n  if (status === 'loading') return /*#__PURE__*/_jsxDEV(\"h6\", {\n    children: 'Loading stats...'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 38\n  }, this);\n  if (status === 'error') return /*#__PURE__*/_jsxDEV(\"h6\", {\n    children: 'Error loading stats'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 36\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex justify-content-between p-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: 'Top insights:'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: ['Data size: ', \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [isSuccess && data.length, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)]\n        }, 1, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: ['Most in-demand skills for senior managers: ', \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: getMostRequiredSkillsByRole('Senior Manager')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)]\n        }, 2, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: ['Office city with the most jobs from the top client: ', \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: getOfficeWithMostJobsByTopClient()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)]\n        }, 3, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: ['Percentage of jobs in Low Tech: ', \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: isSuccess && getPercentageOfJobsByIndustry(\"Low technology\") + '%'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)]\n        }, 4, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Stats, \"ATPq03CP5uGupgP6Jcrj0kBQMhY=\", false, function () {\n  return [useQuery];\n});\n\n_c = Stats;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stats\");","map":{"version":3,"names":["React","useQuery","Stats","entityConfig","fields","getMostFrequent","arr","filteredArray","filter","e","undefined","length","hashmap","reduce","acc","val","Object","keys","a","b","getMostBy","most","by","getTop","getPercentage","getMostRequiredSkillsByRole","role","skillsArray","data","bookingGrade","map","filteredEl","requiredSkills","forEach","element","push","name","getTopClient","clientArray","clientId","getOfficeWithMostJobsByTopClient","client","officeCityArray","filteredE","officeCity","getPercentageOfJobsByIndustry","industry","filteredData","status","isSuccess","normalQueryName","fetchAll"],"sources":["/home/sergi/aspaara/react-coding-challenge/client/src/components/ui/Stats.tsx"],"sourcesContent":["import React from 'react'\nimport { useQuery } from 'react-query'\nimport { EntityConfig } from '../config/main/schema'\n\ntype StatsProps = {\n    entityConfig: EntityConfig\n}\n\nexport default function Stats({ entityConfig }: StatsProps) {\n\n    const { fields } = entityConfig\n\n    const getMostFrequent = (arr: string[]) => {\n        const filteredArray = arr.filter(e => e !== undefined)\n        if (filteredArray.length > 0) {\n            const hashmap = filteredArray.reduce((acc, val) => {\n                //@ts-ignore\n                (acc)[val] = (acc[val] || 0) + 1\n                return acc\n            }, {})\n            //@ts-ignore\n            return Object.keys(hashmap).reduce((a, b) => hashmap[a] > hashmap[b] ? a : b)\n        }\n    }\n    const getMostBy = (most: string, by: string) => {\n\n    }\n\n    const getTop = () => {\n\n    }\n\n    const getPercentage = () => {\n\n    }\n\n    const getMostRequiredSkillsByRole = (role: string) => {\n        let skillsArray: string[] = [];\n\n        (data as unknown[]).filter((e) => {\n            return e.bookingGrade === role\n        }).map((filteredEl) => {\n            filteredEl?.requiredSkills?.forEach((element) => {\n                return skillsArray.push((element.name))\n            });\n\n        }\n\n        )\n        return getMostFrequent(skillsArray)\n    }\n\n    const getTopClient = () => {\n        let clientArray: string[] = [];\n\n        (data as unknown[]).map(e => {\n            return clientArray.push(e.clientId)\n        });\n        return getMostFrequent(clientArray)\n    }\n\n    const getOfficeWithMostJobsByTopClient = () => {\n        const client = getTopClient()\n        let officeCityArray: string[] = [];\n\n        (data as unknown[]).filter((e) => {\n            return e.clientId === client\n        }).map(filteredE => {\n\n            return filteredEl.officeCity && officeCityArray.push(filteredEl.officeCity)\n        });\n        return getMostFrequent(officeCityArray)\n    }\n\n    const getPercentageOfJobsByIndustry = (industry: string) => {\n        const filteredData = (data as unknown[]).filter((e) => {\n            return e.industry === industry\n        })\n        return filteredData.length / (data as unknown[]).length * 100\n    }\n\n    const { data, status, isSuccess } = useQuery(entityConfig.normalQueryName, entityConfig.fetchAll)\n    if (status === 'loading') return <h6>{'Loading stats...'}</h6>\n    if (status === 'error') return <h6>{'Error loading stats'}</h6>\n    return (\n        <div className=\"d-flex justify-content-between p-5\">\n            <div>\n                <h5>\n                    {'Top insights:'}\n                </h5>\n\n                <ul className=\"list-group\">\n                    <li key={1} className=\"list-group-item\">\n                        <span>{'Data size: '} </span>\n                        <strong>{isSuccess && (data as unknown[]).length} </strong>\n                    </li>\n                    <li key={2} className=\"list-group-item\">\n                        <span >{'Most in-demand skills for senior managers: '} </span>\n                        <strong>{getMostRequiredSkillsByRole('Senior Manager')}</strong>\n                    </li>\n                    <li key={3} className=\"list-group-item\">\n                        <span>{'Office city with the most jobs from the top client: '} </span>\n                        <strong>{getOfficeWithMostJobsByTopClient()}</strong>\n                    </li>\n                    <li key={4} className=\"list-group-item\">\n                        <span>{'Percentage of jobs in Low Tech: '} </span>\n                        <strong>{isSuccess && getPercentageOfJobsByIndustry(\"Low technology\") + '%'}</strong>\n                    </li>\n                </ul>\n            </div>\n        </div>\n\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}