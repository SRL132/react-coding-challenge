{"ast":null,"code":"var _jsxFileName = \"/home/sergi/aspaara/react-coding-challenge/client/src/components/ui/Stats.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery } from 'react-query';\nimport jobConfig from '../config/dashboards/jobConfig'; //most repeated string in an array\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Stats() {\n  _s();\n\n  const getMostRequiredSkillsByRole = role => {\n    let skillsArray = [];\n    const filteredData = data.filter(e => {\n      return e.bookingGrade === role; //array with only manager and skills\n    }).map(job => {\n      var _job$requiredSkills;\n\n      job === null || job === void 0 ? void 0 : (_job$requiredSkills = job.requiredSkills) === null || _job$requiredSkills === void 0 ? void 0 : _job$requiredSkills.forEach(element => {\n        //@ts-ignore\n        return skillsArray.push(element.name);\n      });\n    });\n    console.log(skillsArray);\n  };\n\n  const getOfficeWithMostJobsByClient = client => {\n    const filteredData = data.filter(e => {\n      return e.clientName === client;\n    });\n    return;\n  };\n\n  const getPercentageOfJobsByIndustry = industry => {\n    const filteredData = data.filter(e => {\n      return e.industry === industry;\n    });\n    return filteredData.length / data.length * 100;\n  };\n\n  const {\n    data,\n    status,\n    isSuccess\n  } = useQuery(\"fetchAllData\", jobConfig.fetchAll);\n  if (status === 'loading') return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading stats...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 38\n  }, this);\n  if (status === 'error') return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Error loading stats\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 36\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Main insights:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Data size: \", isSuccess && (data === null || data === void 0 ? void 0 : data.length), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Most in-demand skills for senior managers: \", getMostRequiredSkillsByRole('Senior Manager')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Office city with the most jobs from the top client:  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Percentage of jobs in Low Tech: \", isSuccess && getPercentageOfJobsByIndustry(\"Low technology\") + '%']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Stats, \"ATPq03CP5uGupgP6Jcrj0kBQMhY=\", false, function () {\n  return [useQuery];\n});\n\n_c = Stats;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stats\");","map":{"version":3,"names":["React","useQuery","jobConfig","Stats","getMostRequiredSkillsByRole","role","skillsArray","filteredData","data","filter","e","bookingGrade","map","job","requiredSkills","forEach","element","push","name","console","log","getOfficeWithMostJobsByClient","client","clientName","getPercentageOfJobsByIndustry","industry","length","status","isSuccess","fetchAll"],"sources":["/home/sergi/aspaara/react-coding-challenge/client/src/components/ui/Stats.tsx"],"sourcesContent":["import React from 'react'\nimport { useQuery, UseQueryOptions } from 'react-query'\nimport { job } from '../config/dashboards/jobConfig'\nimport jobConfig from '../config/dashboards/jobConfig'\n\n//most repeated string in an array\nexport default function Stats() {\n\n\n    const getMostRequiredSkillsByRole = (role: string) => {\n        let skillsArray: string[] = []\n        const filteredData = (data as job[]).filter((e) => {\n            return e.bookingGrade === role\n            //array with only manager and skills\n        }).map((job) => {\n            job?.requiredSkills?.forEach((element) => {\n                //@ts-ignore\n                return skillsArray.push((element.name))\n            });\n\n        }\n\n        )\n        console.log(skillsArray)\n    }\n    const getOfficeWithMostJobsByClient = (client: string) => {\n        const filteredData = (data as job[]).filter((e) => {\n            return e.clientName === client\n        })\n        return\n    }\n\n    const getPercentageOfJobsByIndustry = (industry: string) => {\n        const filteredData = (data as job[]).filter((e) => {\n            return e.industry === industry\n        })\n        return filteredData.length / (data as job[]).length * 100\n    }\n\n\n\n\n\n    const { data, status, isSuccess } = useQuery(\"fetchAllData\", jobConfig.fetchAll)\n    if (status === 'loading') return <h1>Loading stats...</h1>\n    if (status === 'error') return <h1>Error loading stats</h1>\n    return (\n\n        <div>\n            <h5>Main insights:</h5>\n            <ul className=\"list-group\">\n                {/*@ts-ignore */}\n                <li className=\"list-group-item\"><span>Data size: {isSuccess && data?.length} </span></li>\n\n                <li className=\"list-group-item\">\n                    {/*@ts-ignore */}\n                    <span>Most in-demand skills for senior managers: {getMostRequiredSkillsByRole('Senior Manager')}</span></li>\n                <li className=\"list-group-item\"><span>Office city with the most jobs from the top client:  </span></li>\n                <li className=\"list-group-item\"><span>Percentage of jobs in Low Tech: {isSuccess && getPercentageOfJobsByIndustry(\"Low technology\") + '%'}</span></li>\n            </ul>\n        </div>\n\n    )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAA0C,aAA1C;AAEA,OAAOC,SAAP,MAAsB,gCAAtB,C,CAEA;;;AACA,eAAe,SAASC,KAAT,GAAiB;EAAA;;EAG5B,MAAMC,2BAA2B,GAAIC,IAAD,IAAkB;IAClD,IAAIC,WAAqB,GAAG,EAA5B;IACA,MAAMC,YAAY,GAAIC,IAAD,CAAgBC,MAAhB,CAAwBC,CAAD,IAAO;MAC/C,OAAOA,CAAC,CAACC,YAAF,KAAmBN,IAA1B,CAD+C,CAE/C;IACH,CAHoB,EAGlBO,GAHkB,CAGbC,GAAD,IAAS;MAAA;;MACZA,GAAG,SAAH,IAAAA,GAAG,WAAH,mCAAAA,GAAG,CAAEC,cAAL,4EAAqBC,OAArB,CAA8BC,OAAD,IAAa;QACtC;QACA,OAAOV,WAAW,CAACW,IAAZ,CAAkBD,OAAO,CAACE,IAA1B,CAAP;MACH,CAHD;IAKH,CAToB,CAArB;IAYAC,OAAO,CAACC,GAAR,CAAYd,WAAZ;EACH,CAfD;;EAgBA,MAAMe,6BAA6B,GAAIC,MAAD,IAAoB;IACtD,MAAMf,YAAY,GAAIC,IAAD,CAAgBC,MAAhB,CAAwBC,CAAD,IAAO;MAC/C,OAAOA,CAAC,CAACa,UAAF,KAAiBD,MAAxB;IACH,CAFoB,CAArB;IAGA;EACH,CALD;;EAOA,MAAME,6BAA6B,GAAIC,QAAD,IAAsB;IACxD,MAAMlB,YAAY,GAAIC,IAAD,CAAgBC,MAAhB,CAAwBC,CAAD,IAAO;MAC/C,OAAOA,CAAC,CAACe,QAAF,KAAeA,QAAtB;IACH,CAFoB,CAArB;IAGA,OAAOlB,YAAY,CAACmB,MAAb,GAAuBlB,IAAD,CAAgBkB,MAAtC,GAA+C,GAAtD;EACH,CALD;;EAWA,MAAM;IAAElB,IAAF;IAAQmB,MAAR;IAAgBC;EAAhB,IAA8B3B,QAAQ,CAAC,cAAD,EAAiBC,SAAS,CAAC2B,QAA3B,CAA5C;EACA,IAAIF,MAAM,KAAK,SAAf,EAA0B,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;EAC1B,IAAIA,MAAM,KAAK,OAAf,EAAwB,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;EACxB,oBAEI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAI,SAAS,EAAC,YAAd;MAAA,wBAEI;QAAI,SAAS,EAAC,iBAAd;QAAA,uBAAgC;UAAA,0BAAkBC,SAAS,KAAIpB,IAAJ,aAAIA,IAAJ,uBAAIA,IAAI,CAAEkB,MAAV,CAA3B;QAAA;UAAA;UAAA;UAAA;QAAA;MAAhC;QAAA;QAAA;QAAA;MAAA,QAFJ,eAII;QAAI,SAAS,EAAC,iBAAd;QAAA,uBAEI;UAAA,0DAAkDtB,2BAA2B,CAAC,gBAAD,CAA7E;QAAA;UAAA;UAAA;UAAA;QAAA;MAFJ;QAAA;QAAA;QAAA;MAAA,QAJJ,eAOI;QAAI,SAAS,EAAC,iBAAd;QAAA,uBAAgC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAhC;QAAA;QAAA;QAAA;MAAA,QAPJ,eAQI;QAAI,SAAS,EAAC,iBAAd;QAAA,uBAAgC;UAAA,+CAAuCwB,SAAS,IAAIJ,6BAA6B,CAAC,gBAAD,CAA7B,GAAkD,GAAtG;QAAA;UAAA;UAAA;UAAA;QAAA;MAAhC;QAAA;QAAA;QAAA;MAAA,QARJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QAFJ;AAiBH;;GAzDuBrB,K;UAqCgBF,Q;;;KArChBE,K"},"metadata":{},"sourceType":"module"}