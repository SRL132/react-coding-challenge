{"ast":null,"code":"var _jsxFileName = \"/home/sergi/aspaara/react-coding-challenge/client/src/components/job/JobDashboard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport jobConfig from '../config/dashboards/jobConfig';\nimport { useInfiniteQuery } from 'react-query';\nimport Stats from '../ui/Stats';\nimport { JobContext } from '../context/jobContext';\nimport { UPDATE_SORTING } from '../reducers/jobReducerTypes';\nimport Table from '../ui/Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst JobDashboard = () => {\n  _s();\n\n  var _data$pages;\n\n  //@ts-ignore\n  const [state, dispatch] = useContext(JobContext);\n  const [fetchOptions, setFetchOptions] = useState({\n    itemsPerPage: 10,\n    sortOptions: {\n      sortBy: 'id',\n      sortOrder: 'asc'\n    },\n    filterOptions: []\n  });\n  const {\n    data,\n    status,\n    hasNextPage,\n    fetchNextPage,\n    isSuccess //@ts-ignore\n\n  } = useInfiniteQuery([\"InfiniteQueryData\", state], _ref => {\n    let {\n      pageParam = 1\n    } = _ref;\n    return jobConfig.fetch(pageParam, state);\n  }, {\n    getNextPageParam: (lastPage, allPages) => {\n      const nextPage = allPages.length + 1;\n      return nextPage;\n    }\n  });\n\n  const handleCheckboxChange = event => {\n    if (event.target.checked === true) {\n      //@ts-ignore\n      setFetchOptions({ ...fetchOptions,\n        filterOptions: [...fetchOptions.filterOptions, {\n          filterBy: event.target.name,\n          filterParam: 'true'\n        }]\n      });\n    } else {\n      //@ts-ignore\n      setFetchOptions({ ...fetchOptions,\n        filterOptions: fetchOptions.filterOptions.filter(options => (options === null || options === void 0 ? void 0 : options.filterBy) !== event.target.name)\n      });\n    }\n  };\n\n  const handleSearchChange = event => {\n    //@ts-ignore\n    console.log(fetchOptions); //@ts-ignore\n\n    if (!fetchOptions.filterOptions.some(filter => filter.filterBy === 'q')) {\n      //@ts-ignore\n      setFetchOptions({ ...fetchOptions,\n        filterOptions: [...fetchOptions.filterOptions, {\n          filterBy: 'q',\n          filterParam: event.target.value\n        }]\n      });\n    } else {\n      //@ts-ignore\n      const SearchOptionIndex = fetchOptions.filterOptions.findIndex(option => option.filterBy === 'q'); //@ts-ignore\n\n      fetchOptions.filterOptions[SearchOptionIndex] = {\n        filterBy: 'q',\n        filterParam: event.target.value\n      };\n      const newFetchOptions = fetchOptions; //@ts-ignore\n\n      setFetchOptions(newFetchOptions);\n      console.log(fetchOptions);\n    }\n  }; //@ts-ignore\n\n\n  const sortData = newSortOptions => {\n    console.log(state);\n\n    if (state.sortOptions.sortBy !== newSortOptions.sortBy) {\n      dispatch({\n        type: UPDATE_SORTING,\n        payload: {\n          sortBy: newSortOptions.sortBy,\n          sortOrder: 'asc'\n        }\n      });\n    } else {\n      const newSortOrder = state.sortOptions.sortOrder === 'asc' || state.sortOptions.sortOrder === undefined ? 'desc' : 'asc';\n      dispatch({\n        type: UPDATE_SORTING,\n        payload: {\n          sortBy: newSortOptions.sortBy,\n          sortOrder: newSortOrder\n        }\n      });\n    }\n  };\n\n  const fields = jobConfig.fields;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Stats, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"isUnassigned\",\n            children: \"Unassigned\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"isUnassigned\",\n            onChange: handleCheckboxChange,\n            type: \"checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"textSearch\",\n            type: \"text\",\n            placeholder: \"Search\",\n            onChange: handleSearchChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), status === 'loading' && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 34\n      }, this), status === 'error' && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"There has been an error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(Table, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), isSuccess && (data === null || data === void 0 ? void 0 : (_data$pages = data.pages) === null || _data$pages === void 0 ? void 0 : _data$pages.length) > 0 && /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n        loadMore: fetchNextPage,\n        hasMore: hasNextPage,\n        loader: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 50\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(JobDashboard, \"pbLQ0VwCjU2IHw8pTM48HHFboBQ=\", false, function () {\n  return [useInfiniteQuery];\n});\n\n_c = JobDashboard;\nexport default JobDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobDashboard\");","map":{"version":3,"names":["React","useState","useContext","InfiniteScroll","jobConfig","useInfiniteQuery","Stats","JobContext","UPDATE_SORTING","Table","JobDashboard","state","dispatch","fetchOptions","setFetchOptions","itemsPerPage","sortOptions","sortBy","sortOrder","filterOptions","data","status","hasNextPage","fetchNextPage","isSuccess","pageParam","fetch","getNextPageParam","lastPage","allPages","nextPage","length","handleCheckboxChange","event","target","checked","filterBy","name","filterParam","filter","options","handleSearchChange","console","log","some","value","SearchOptionIndex","findIndex","option","newFetchOptions","sortData","newSortOptions","type","payload","newSortOrder","undefined","fields","pages"],"sources":["/home/sergi/aspaara/react-coding-challenge/client/src/components/job/JobDashboard.tsx"],"sourcesContent":["import React, { ChangeEvent, useState, useContext } from 'react'\nimport InfiniteScroll from 'react-infinite-scroller';\nimport jobConfig from '../config/dashboards/jobConfig'\nimport { useInfiniteQuery } from 'react-query'\nimport { job } from '../config/dashboards/jobConfig'\nimport Stats from '../ui/Stats';\nimport { JobContext } from '../context/jobContext';\nimport { UPDATE_SORTING } from '../reducers/jobReducerTypes';\nimport Table from '../ui/Table';\n\nconst JobDashboard = () => {\n  //@ts-ignore\n  const [state, dispatch] = useContext(JobContext)\n  const [fetchOptions, setFetchOptions] = useState({\n    itemsPerPage: 10, sortOptions: {\n      sortBy: 'id',\n      sortOrder: 'asc'\n    }, filterOptions: []\n  })\n\n  const { data, status, hasNextPage, fetchNextPage, isSuccess\n    //@ts-ignore\n  } = useInfiniteQuery([\"InfiniteQueryData\", state], ({ pageParam = 1 }) => jobConfig.fetch(pageParam, state), {\n\n    getNextPageParam: (lastPage, allPages) => {\n      const nextPage = allPages.length + 1\n      return nextPage\n    }\n  })\n\n  const handleCheckboxChange = (event: ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked === true) {\n      //@ts-ignore\n      setFetchOptions({ ...fetchOptions, filterOptions: [...fetchOptions.filterOptions, { filterBy: event.target.name, filterParam: 'true' }] })\n    } else {\n      //@ts-ignore\n      setFetchOptions({ ...fetchOptions, filterOptions: fetchOptions.filterOptions.filter(options => options?.filterBy !== event.target.name) })\n    }\n  }\n\n  const handleSearchChange = (event: ChangeEvent<HTMLInputElement>) => {\n    //@ts-ignore\n    console.log(fetchOptions)\n    //@ts-ignore\n    if (!fetchOptions.filterOptions.some(filter => filter.filterBy === 'q')) {\n      //@ts-ignore\n      setFetchOptions({ ...fetchOptions, filterOptions: [...fetchOptions.filterOptions, { filterBy: 'q', filterParam: event.target.value }] })\n    } else {\n      //@ts-ignore\n      const SearchOptionIndex = fetchOptions.filterOptions.findIndex((option) => option.filterBy === 'q')\n      //@ts-ignore\n      fetchOptions.filterOptions[SearchOptionIndex] = { filterBy: 'q', filterParam: event.target.value }\n      const newFetchOptions = fetchOptions\n      //@ts-ignore\n      setFetchOptions(newFetchOptions)\n      console.log(fetchOptions);\n\n    }\n  }\n\n  //@ts-ignore\n  const sortData = (newSortOptions) => {\n    console.log(state)\n    if (state.sortOptions.sortBy !== newSortOptions.sortBy) {\n      dispatch({ type: UPDATE_SORTING, payload: { sortBy: newSortOptions.sortBy, sortOrder: 'asc' } })\n    } else {\n      const newSortOrder = state.sortOptions.sortOrder === 'asc' || state.sortOptions.sortOrder === undefined ? 'desc' : 'asc'\n      dispatch({ type: UPDATE_SORTING, payload: { sortBy: newSortOptions.sortBy, sortOrder: newSortOrder } })\n    }\n  }\n\n  const fields = jobConfig.fields\n\n  return (\n    <>\n      {/*@ts-ignore*/}\n      <div>\n        <Stats />\n        <h6 >\n          Filters\n        </h6>\n        <div className='d-flex justify-content-center'>\n          <div>\n            <label htmlFor=\"isUnassigned\">Unassigned</label>\n            <input name=\"isUnassigned\" onChange={handleCheckboxChange} type=\"checkbox\"></input>\n          </div>\n          <div>\n            <input name='textSearch' type=\"text\" placeholder='Search' onChange={handleSearchChange}></input>\n          </div>\n        </div>\n        {status === 'loading' && <h1>Loading...</h1>}\n        {status === 'error' && <h1>There has been an error</h1>}\n\n\n        <Table />\n        { /*@ts-ignore*/}\n        {isSuccess && data?.pages?.length > 0 && < InfiniteScroll loadMore={fetchNextPage}\n          hasMore={hasNextPage}\n          loader={<h4>Loading...</h4>}\n        ></InfiniteScroll>}\n      </div>\n    </>\n  )\n}\n\nexport default JobDashboard"],"mappings":"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"},"metadata":{},"sourceType":"module"}